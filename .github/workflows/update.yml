# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Get updated files

on:
  push:
    branches:
      - 'main'

jobs:
  changed_files:
    runs-on: ubuntu-20.04  # windows-latest || macos-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    name: Get all changed files and make API request
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40.1.0

      # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install axios
      - name: Make request to update file
        uses: actions/github-script@v6
        with:
          script: |
            const axios = require('axios');
            const res = await axios.get('https://pokeapi.co/api/v2/pokemon/ditto');
            console.log('${{ steps.changed-files.outputs.all_changed_files }}');
            console.log(res.status);
  # build:

  #   runs-on: ubuntu-20.04

  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: |
  #         for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
  #           echo "$file was changed"
  #         done
    # - run: npm run leaderboard
    #   env:
    #     DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN_DEV }}
    # - run: npm run changelog
    #   env:
    #     DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN_DEV }}
    #     SHA: ${{ github.sha }}
    #     MODULE: Leaderboard